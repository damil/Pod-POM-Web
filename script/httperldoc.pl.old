use strict;
use warnings;
no warnings 'uninitialized';

use lib '../lib';

use Pod::POM::Web;

use HTTP::Daemon;
use HTTP::Status;

my $port = $ARGV[0] || 8080;

my $d = HTTP::Daemon->new(LocalPort => $port) || die;
print STDERR "Please contact me at: <URL:", $d->url, ">\n";
while (my $c = $d->accept) {
  while (my $req = $c->get_request) {
    my $r = Fake::ModPerl->new($c, $req);
    print STDERR "URL : " , $req->url, "\n";
    Pod::POM::Web::handler($r);
    $c->send_response($r->{response}) unless $r->{sent_file};
  }
  $c->close;
  undef($c);
}


package Fake::ModPerl;

sub new {
  my ($class, $c, $req) = @_;
  my $self = {c         => $c,
              req       => $req,
              response  => HTTP::Response->new};
  bless $self, $class;
}

sub content_type {
  my ($self, $type) = @_;
  $self->{response}->header(Content_type => $type);
}

sub print {
  my ($self, $content) = @_;
  $self->{response}->add_content($content);
}

sub sendfile {
  my ($self, $filename) = @_;
  $self->{c}->send_file_response($filename);
  $self->{sent_file} = 1;
}

sub uri {
  my $self = shift;
  return $self->{req}->url;
}

sub path_info {
  my $self = shift;
  use Data::Dumper;
  return $self->{req}->url->path;
}
